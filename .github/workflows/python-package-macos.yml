name: Python package (MacOS)

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-11.0']
        python-version: ['3.7.9']

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Needed for git describe to find tags.
    - name: Checkout submodules
      run: |
        git submodule update --init --recursive --depth 1
    - name: Print git describe
      run: |
        git describe
    - name: Set up Mac Python ${{ matrix.python-version }}
      # actions/setup-python can't be used as it builds less portable extensions.
      env:
        MB_PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        source .travis/install_python.sh
        install_python
        $PYTHON_EXE -m venv venv
        source venv/bin/activate
        echo "$PATH" >> $GITHUB_PATH
    - name: Print Python version
      run: |
        python -VV
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov pytest-benchmark delocate wheel twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package.
      env:
        TCOD_TAG: ${{ github.event.release.tag_name }}
      run: |
        python setup.py sdist develop bdist_wheel --py-limited-api=cp35
    - name: Package binary files
      run: |
        delocate-wheel -v dist/*.whl
        delocate-listdeps --all dist/*.whl
    - name: Test with pytest
      run: |
        pytest --no-window --cov-report=xml
    - uses: codecov/codecov-action@v1
    - name: Upload to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --skip-existing dist/*
